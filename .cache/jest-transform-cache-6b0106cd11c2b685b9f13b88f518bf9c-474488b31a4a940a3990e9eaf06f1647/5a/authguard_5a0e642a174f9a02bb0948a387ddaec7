9b85b4171f4e6e36adab6636897e9570
"use strict";

/* istanbul ignore next */
function cov_hr3n0aoik() {
  var path = "C:\\Users\\ploutarchosm\\Desktop\\GIT\\k6c6KIx4wbYIMnoNorW7\\src\\app\\guards\\auth.guard.ts";
  var hash = "edad6ae7a8347bdbe2bcc0c126f76e64f513d2f4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\ploutarchosm\\Desktop\\GIT\\k6c6KIx4wbYIMnoNorW7\\src\\app\\guards\\auth.guard.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 27
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 17
        },
        end: {
          line: 6,
          column: 43
        }
      },
      "5": {
        start: {
          line: 7,
          column: 23
        },
        end: {
          line: 7,
          column: 60
        }
      },
      "6": {
        start: {
          line: 8,
          column: 16
        },
        end: {
          line: 20,
          column: 1
        }
      },
      "7": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 39
        }
      },
      "8": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 29
        }
      },
      "9": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 20
        }
      },
      "10": {
        start: {
          line: 16,
          column: 13
        },
        end: {
          line: 19,
          column: 6
        }
      },
      "11": {
        start: {
          line: 16,
          column: 41
        },
        end: {
          line: 19,
          column: 5
        }
      },
      "12": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 25,
          column: 14
        }
      },
      "13": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 26,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 37
          },
          end: {
            line: 12,
            column: 5
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 29
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 35
          },
          end: {
            line: 16,
            column: 36
          }
        },
        loc: {
          start: {
            line: 16,
            column: 41
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 16
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {},
    inputSourceMap: {
      file: "C:\\Users\\ploutarchosm\\Desktop\\GIT\\k6c6KIx4wbYIMnoNorW7\\src\\app\\guards\\auth.guard.ts",
      mappings: ";;;;AAAA,wCAA2C;AAC3C,4CAKyB;AAEzB,6DAAyD;AAKzD,IAAa,SAAS,GAAtB,MAAa,SAAS;IACpB,YAAmB,WAAwB,EAAS,MAAc;QAA/C,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAEtE,WAAW,CACT,IAA4B,EAC5B,KAA0B;QAE1B,OAAO,IAAI,CAAC;IACd,CAAC;;;;;;AARU,SAAS;IAHrB,IAAA,iBAAU,EAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,SAAS,CASrB;AATY,8BAAS",
      names: [],
      sources: ["C:\\Users\\ploutarchosm\\Desktop\\GIT\\k6c6KIx4wbYIMnoNorW7\\src\\app\\guards\\auth.guard.ts"],
      sourcesContent: ["import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '@app/services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(public authService: AuthService, public router: Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    return true;\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "edad6ae7a8347bdbe2bcc0c126f76e64f513d2f4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_hr3n0aoik = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_hr3n0aoik();
cov_hr3n0aoik().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_hr3n0aoik().s[1]++;
exports.AuthGuard = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_hr3n0aoik().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_hr3n0aoik().s[3]++, require("@angular/core"));
const router_1 =
/* istanbul ignore next */
(cov_hr3n0aoik().s[4]++, require("@angular/router"));
const auth_service_1 =
/* istanbul ignore next */
(cov_hr3n0aoik().s[5]++, require("@app/services/auth.service"));
/* istanbul ignore next */
cov_hr3n0aoik().s[6]++;
let AuthGuard = class AuthGuard {
  constructor(authService, router) {
    /* istanbul ignore next */
    cov_hr3n0aoik().f[0]++;
    cov_hr3n0aoik().s[7]++;
    this.authService = authService;
    /* istanbul ignore next */
    cov_hr3n0aoik().s[8]++;
    this.router = router;
  }
  canActivate(next, state) {
    /* istanbul ignore next */
    cov_hr3n0aoik().f[1]++;
    cov_hr3n0aoik().s[9]++;
    return true;
  }
  static {
    /* istanbul ignore next */
    cov_hr3n0aoik().s[10]++;
    this.ctorParameters = () => {
      /* istanbul ignore next */
      cov_hr3n0aoik().f[2]++;
      cov_hr3n0aoik().s[11]++;
      return [{
        type: auth_service_1.AuthService
      }, {
        type: router_1.Router
      }];
    };
  }
};
/* istanbul ignore next */
cov_hr3n0aoik().s[12]++;
AuthGuard = tslib_1.__decorate([(0, core_1.Injectable)({
  providedIn: 'root'
})], AuthGuard);
/* istanbul ignore next */
cov_hr3n0aoik().s[13]++;
exports.AuthGuard = AuthGuard;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3JlXzEiLCJjb3ZfaHIzbjBhb2lrIiwicyIsInJlcXVpcmUiLCJyb3V0ZXJfMSIsImF1dGhfc2VydmljZV8xIiwiQXV0aEd1YXJkIiwiY29uc3RydWN0b3IiLCJhdXRoU2VydmljZSIsInJvdXRlciIsImYiLCJjYW5BY3RpdmF0ZSIsIm5leHQiLCJzdGF0ZSIsInRzbGliXzEiLCJfX2RlY29yYXRlIiwiSW5qZWN0YWJsZSIsInByb3ZpZGVkSW4iLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxwbG91dGFyY2hvc21cXERlc2t0b3BcXEdJVFxcazZjNktJeDR3YllJTW5vTm9yVzdcXHNyY1xcYXBwXFxndWFyZHNcXGF1dGguZ3VhcmQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgQWN0aXZhdGVkUm91dGVTbmFwc2hvdCxcbiAgQ2FuQWN0aXZhdGUsXG4gIFJvdXRlcixcbiAgUm91dGVyU3RhdGVTbmFwc2hvdCxcbn0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IEF1dGhTZXJ2aWNlIH0gZnJvbSAnQGFwcC9zZXJ2aWNlcy9hdXRoLnNlcnZpY2UnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290Jyxcbn0pXG5leHBvcnQgY2xhc3MgQXV0aEd1YXJkIGltcGxlbWVudHMgQ2FuQWN0aXZhdGUge1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgYXV0aFNlcnZpY2U6IEF1dGhTZXJ2aWNlLCBwdWJsaWMgcm91dGVyOiBSb3V0ZXIpIHt9XG5cbiAgY2FuQWN0aXZhdGUoXG4gICAgbmV4dDogQWN0aXZhdGVkUm91dGVTbmFwc2hvdCxcbiAgICBzdGF0ZTogUm91dGVyU3RhdGVTbmFwc2hvdFxuICApOiBPYnNlcnZhYmxlPGJvb2xlYW4+IHwgUHJvbWlzZTxib29sZWFuPiB8IGJvb2xlYW4ge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsTUFBQUEsTUFBQTtBQUFBO0FBQUEsQ0FBQUMsYUFBQSxHQUFBQyxDQUFBLE9BQUFDLE9BQUE7QUFDQSxNQUFBQyxRQUFBO0FBQUE7QUFBQSxDQUFBSCxhQUFBLEdBQUFDLENBQUEsT0FBQUMsT0FBQTtBQU9BLE1BQUFFLGNBQUE7QUFBQTtBQUFBLENBQUFKLGFBQUEsR0FBQUMsQ0FBQSxPQUFBQyxPQUFBO0FBQXlEO0FBQUFGLGFBQUEsR0FBQUMsQ0FBQTtBQUt6RCxJQUFhSSxTQUFTLEdBQXRCLE1BQWFBLFNBQVM7RUFDcEJDLFlBQW1CQyxXQUF3QixFQUFTQyxNQUFjO0lBQUE7SUFBQVIsYUFBQSxHQUFBUyxDQUFBO0lBQUFULGFBQUEsR0FBQUMsQ0FBQTtJQUEvQyxLQUFBTSxXQUFXLEdBQVhBLFdBQVc7SUFBYTtJQUFBUCxhQUFBLEdBQUFDLENBQUE7SUFBUyxLQUFBTyxNQUFNLEdBQU5BLE1BQU07RUFBVztFQUVyRUUsV0FBV0EsQ0FDVEMsSUFBNEIsRUFDNUJDLEtBQTBCO0lBQUE7SUFBQVosYUFBQSxHQUFBUyxDQUFBO0lBQUFULGFBQUEsR0FBQUMsQ0FBQTtJQUUxQixPQUFPLElBQUk7RUFDYjs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBUldJLFNBQVMsR0FBQVEsT0FBQSxDQUFBQyxVQUFBLEVBSHJCLElBQUFmLE1BQUEsQ0FBQWdCLFVBQVUsRUFBQztFQUNWQyxVQUFVLEVBQUU7Q0FDYixDQUFDLEMsRUFDV1gsU0FBUyxDQVNyQjtBQUFBO0FBQUFMLGFBQUEsR0FBQUMsQ0FBQTtBQVRZZ0IsT0FBQSxDQUFBWixTQUFBLEdBQUFBLFNBQUEifQ==