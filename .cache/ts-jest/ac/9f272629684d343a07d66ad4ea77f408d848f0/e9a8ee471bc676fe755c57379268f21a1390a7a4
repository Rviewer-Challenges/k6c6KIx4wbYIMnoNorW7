[["C:\\Users\\ploutarchosm\\Desktop\\GIT\\k6c6KIx4wbYIMnoNorW7\\src\\app\\auth\\guards\\auth.guard.ts",{"fileContent":"import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { map } from 'rxjs';\nimport { AuthService } from '@app/auth/services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard {\n  constructor(private authService: AuthService, public router: Router) {}\n\n  canActivate() {\n    return this.authService.AuthState().pipe(\n      map(isLoggedIn => {\n        if (!isLoggedIn) {\n          this.router.navigate(['login']);\n          return false;\n        } else {\n          return true;\n        }\n      })\n    );\n  }\n}\n","resolvedModuleNames":["C:/Users/ploutarchosm/Desktop/GIT/k6c6KIx4wbYIMnoNorW7/src/app/auth/services/auth.service.ts","C:/Users/ploutarchosm/Desktop/GIT/k6c6KIx4wbYIMnoNorW7/src/app/services/local-storage.service.ts"]}],["C:\\Users\\ploutarchosm\\Desktop\\GIT\\k6c6KIx4wbYIMnoNorW7\\src\\app\\auth\\components\\google-login\\google-login.component.ts",{"fileContent":"import { Component } from '@angular/core';\nimport { AuthService } from '@app/auth/services/auth.service';\n\n@Component({\n  selector: 'app-google-login',\n  templateUrl: './google-login.component.html',\n  styleUrls: ['./google-login.component.scss'],\n})\nexport class GoogleLoginComponent {\n  constructor(private authService: AuthService) {}\n}\n","resolvedModuleNames":["C:/Users/ploutarchosm/Desktop/GIT/k6c6KIx4wbYIMnoNorW7/src/app/auth/services/auth.service.ts","C:/Users/ploutarchosm/Desktop/GIT/k6c6KIx4wbYIMnoNorW7/src/app/services/local-storage.service.ts"]}],["C:\\Users\\ploutarchosm\\Desktop\\GIT\\k6c6KIx4wbYIMnoNorW7\\src\\app\\auth\\services\\auth.service.ts",{"fileContent":"import { Injectable } from '@angular/core';\nimport * as auth from 'firebase/auth';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport firebase from 'firebase/compat';\nimport { from, map, Observable } from 'rxjs';\nimport { LocalStorageService } from '@app/services/local-storage.service';\n\nenum Auth {\n  User = 'user',\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(\n    private ngFirebaseAuth: AngularFireAuth,\n    private ngLocalStorage: LocalStorageService\n  ) {}\n\n  SignIn() {\n    return this.AuthLogin(new auth.GoogleAuthProvider());\n  }\n\n  SignOut(): Observable<void> {\n    return from(this.ngFirebaseAuth.signOut());\n  }\n\n  AuthState() {\n    return this.ngFirebaseAuth.authState.pipe(\n      map(user => {\n        if (user) {\n          this.ngLocalStorage.save(Auth.User, user.refreshToken);\n          return true;\n        } else {\n          this.ngLocalStorage.remove(Auth.User);\n          return false;\n        }\n      })\n    );\n  }\n\n  private AuthLogin(\n    provider: firebase.auth.AuthProvider\n  ): Observable<firebase.auth.UserCredential> {\n    return from(this.ngFirebaseAuth.signInWithPopup(provider));\n  }\n}\n","resolvedModuleNames":["C:/Users/ploutarchosm/Desktop/GIT/k6c6KIx4wbYIMnoNorW7/src/app/services/local-storage.service.ts","C:/Users/ploutarchosm/Desktop/GIT/k6c6KIx4wbYIMnoNorW7/src/environments/environment.ts"]}],["C:\\Users\\ploutarchosm\\Desktop\\GIT\\k6c6KIx4wbYIMnoNorW7\\src\\app\\services\\local-storage.service.ts",{"fileContent":"import { Injectable } from '@angular/core';\nimport * as CryptoJS from 'crypto-js';\nimport { environment } from '@env/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorageService {\n  private readonly key: string;\n\n  constructor() {\n    this.key = environment.applicationSecret;\n  }\n\n  public save(key: string, value: string) {\n    localStorage.setItem(key, this.encrypt(value));\n  }\n\n  public get(key: string) {\n    const data = localStorage.getItem(key) || '';\n    return this.decrypt(data);\n  }\n\n  public remove(key: string) {\n    localStorage.removeItem(key);\n  }\n\n  public clear() {\n    localStorage.clear();\n  }\n\n  private encrypt(txt: string): string {\n    return CryptoJS.AES.encrypt(txt, this.key).toString();\n  }\n\n  private decrypt(txtToDecrypt: string) {\n    return CryptoJS.AES.decrypt(txtToDecrypt, this.key).toString(\n      CryptoJS.enc.Utf8\n    );\n  }\n}\n","resolvedModuleNames":["C:/Users/ploutarchosm/Desktop/GIT/k6c6KIx4wbYIMnoNorW7/src/environments/environment.ts"]}],["C:\\Users\\ploutarchosm\\Desktop\\GIT\\k6c6KIx4wbYIMnoNorW7\\src\\app\\app.component.ts",{"fileContent":"import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: '<router-outlet></router-outlet>',\n})\nexport class AppComponent {}\n","resolvedModuleNames":[]}],["C:\\Users\\ploutarchosm\\Desktop\\GIT\\k6c6KIx4wbYIMnoNorW7\\src\\app\\auth\\components\\login\\login.component.ts",{"fileContent":"import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent {\n  headerText = 'Firebase Chat Login';\n  providersList = 'Providers list';\n}\n","resolvedModuleNames":[]}],["C:\\Users\\ploutarchosm\\Desktop\\GIT\\k6c6KIx4wbYIMnoNorW7\\src\\app\\chat\\components\\chat-room\\chat-room.component.ts",{"fileContent":"import { Component, OnInit } from '@angular/core';\nimport { Auth, AuthService } from '@app/auth/services/auth.service';\nimport { LocalStorageService } from '@app/services/local-storage.service';\n\n@Component({\n  selector: 'app-chat-room',\n  templateUrl: './chat-room.component.html',\n  styleUrls: ['./chat-room.component.scss'],\n})\nexport class ChatRoomComponent implements OnInit {\n  constructor(\n    private authService: AuthService,\n    private localStorage: LocalStorageService\n  ) {}\n\n  signOut() {\n    this.authService.SignOut().subscribe();\n  }\n\n  ngOnInit(): void {\n    const user = this.localStorage.get(Auth.User);\n    console.log(user);\n  }\n}\n","resolvedModuleNames":["C:/Users/ploutarchosm/Desktop/GIT/k6c6KIx4wbYIMnoNorW7/src/app/auth/services/auth.service.ts","C:/Users/ploutarchosm/Desktop/GIT/k6c6KIx4wbYIMnoNorW7/src/app/services/local-storage.service.ts","C:/Users/ploutarchosm/Desktop/GIT/k6c6KIx4wbYIMnoNorW7/src/environments/environment.ts"]}]]