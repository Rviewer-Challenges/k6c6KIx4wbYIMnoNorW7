de334d48a6c026db79eaf7248fe5441f
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
jest.mock('@app/auth/services/auth.service');
jest.mock('@app/services/firebase.service');
const testing_1 = require("@angular/core/testing");
const google_login_component_1 = require("./google-login.component");
const auth_service_1 = require("@app/auth/services/auth.service");
const app_1 = require("firebase/app");
const environment_1 = require("@env/environment");
const auth_1 = require("@angular/fire/compat/auth");
const firebase_service_1 = require("@app/services/firebase.service");
(0, app_1.initializeApp)(environment_1.environment.firebase);
describe('GoogleLoginComponent', () => {
    let component;
    let fixture;
    beforeEach(() => {
        testing_1.TestBed.configureTestingModule({
            imports: [auth_1.AngularFireAuthModule],
            declarations: [google_login_component_1.GoogleLoginComponent],
            providers: [auth_service_1.AuthService, firebase_service_1.FirebaseService],
        });
        fixture = testing_1.TestBed.createComponent(google_login_component_1.GoogleLoginComponent);
        component = fixture.componentInstance;
        fixture.detectChanges();
    });
    it('should create', () => {
        expect(component).toBeTruthy();
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxVc2VyXFxEZXNrdG9wXFxrNmM2S0l4NHdiWUlNbm9Ob3JXN1xcc3JjXFxhcHBcXGF1dGhcXGNvbXBvbmVudHNcXGdvb2dsZS1sb2dpblxcZ29vZ2xlLWxvZ2luLmNvbXBvbmVudC5zcGVjLnRzIiwibWFwcGluZ3MiOiI7O0FBU0EsSUFBSSxDQUFDLElBQUksQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDO0FBQzdDLElBQUksQ0FBQyxJQUFJLENBQUMsZ0NBQWdDLENBQUMsQ0FBQztBQVY1QyxtREFBa0U7QUFFbEUscUVBQWdFO0FBQ2hFLGtFQUE4RDtBQUM5RCxzQ0FBNkM7QUFDN0Msa0RBQStDO0FBQy9DLG9EQUFrRTtBQUNsRSxxRUFBaUU7QUFLakUsSUFBQSxtQkFBYSxFQUFDLHlCQUFXLENBQUMsUUFBUSxDQUFDLENBQUM7QUFFcEMsUUFBUSxDQUFDLHNCQUFzQixFQUFFLEdBQUcsRUFBRTtJQUNwQyxJQUFJLFNBQStCLENBQUM7SUFDcEMsSUFBSSxPQUErQyxDQUFDO0lBRXBELFVBQVUsQ0FBQyxHQUFHLEVBQUU7UUFDZCxpQkFBTyxDQUFDLHNCQUFzQixDQUFDO1lBQzdCLE9BQU8sRUFBRSxDQUFDLDRCQUFxQixDQUFDO1lBQ2hDLFlBQVksRUFBRSxDQUFDLDZDQUFvQixDQUFDO1lBQ3BDLFNBQVMsRUFBRSxDQUFDLDBCQUFXLEVBQUUsa0NBQWUsQ0FBQztTQUMxQyxDQUFDLENBQUM7UUFDSCxPQUFPLEdBQUcsaUJBQU8sQ0FBQyxlQUFlLENBQUMsNkNBQW9CLENBQUMsQ0FBQztRQUN4RCxTQUFTLEdBQUcsT0FBTyxDQUFDLGlCQUFpQixDQUFDO1FBQ3RDLE9BQU8sQ0FBQyxhQUFhLEVBQUUsQ0FBQztJQUMxQixDQUFDLENBQUMsQ0FBQztJQUVILEVBQUUsQ0FBQyxlQUFlLEVBQUUsR0FBRyxFQUFFO1FBQ3ZCLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FBQztJQUNqQyxDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyxDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVXNlclxcRGVza3RvcFxcazZjNktJeDR3YllJTW5vTm9yVzdcXHNyY1xcYXBwXFxhdXRoXFxjb21wb25lbnRzXFxnb29nbGUtbG9naW5cXGdvb2dsZS1sb2dpbi5jb21wb25lbnQuc3BlYy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnRGaXh0dXJlLCBUZXN0QmVkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZS90ZXN0aW5nJztcblxuaW1wb3J0IHsgR29vZ2xlTG9naW5Db21wb25lbnQgfSBmcm9tICcuL2dvb2dsZS1sb2dpbi5jb21wb25lbnQnO1xuaW1wb3J0IHsgQXV0aFNlcnZpY2UgfSBmcm9tICdAYXBwL2F1dGgvc2VydmljZXMvYXV0aC5zZXJ2aWNlJztcbmltcG9ydCB7IGluaXRpYWxpemVBcHAgfSBmcm9tICdmaXJlYmFzZS9hcHAnO1xuaW1wb3J0IHsgZW52aXJvbm1lbnQgfSBmcm9tICdAZW52L2Vudmlyb25tZW50JztcbmltcG9ydCB7IEFuZ3VsYXJGaXJlQXV0aE1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2ZpcmUvY29tcGF0L2F1dGgnO1xuaW1wb3J0IHsgRmlyZWJhc2VTZXJ2aWNlIH0gZnJvbSAnQGFwcC9zZXJ2aWNlcy9maXJlYmFzZS5zZXJ2aWNlJztcblxuamVzdC5tb2NrKCdAYXBwL2F1dGgvc2VydmljZXMvYXV0aC5zZXJ2aWNlJyk7XG5qZXN0Lm1vY2soJ0BhcHAvc2VydmljZXMvZmlyZWJhc2Uuc2VydmljZScpO1xuXG5pbml0aWFsaXplQXBwKGVudmlyb25tZW50LmZpcmViYXNlKTtcblxuZGVzY3JpYmUoJ0dvb2dsZUxvZ2luQ29tcG9uZW50JywgKCkgPT4ge1xuICBsZXQgY29tcG9uZW50OiBHb29nbGVMb2dpbkNvbXBvbmVudDtcbiAgbGV0IGZpeHR1cmU6IENvbXBvbmVudEZpeHR1cmU8R29vZ2xlTG9naW5Db21wb25lbnQ+O1xuXG4gIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgIFRlc3RCZWQuY29uZmlndXJlVGVzdGluZ01vZHVsZSh7XG4gICAgICBpbXBvcnRzOiBbQW5ndWxhckZpcmVBdXRoTW9kdWxlXSxcbiAgICAgIGRlY2xhcmF0aW9uczogW0dvb2dsZUxvZ2luQ29tcG9uZW50XSxcbiAgICAgIHByb3ZpZGVyczogW0F1dGhTZXJ2aWNlLCBGaXJlYmFzZVNlcnZpY2VdLFxuICAgIH0pO1xuICAgIGZpeHR1cmUgPSBUZXN0QmVkLmNyZWF0ZUNvbXBvbmVudChHb29nbGVMb2dpbkNvbXBvbmVudCk7XG4gICAgY29tcG9uZW50ID0gZml4dHVyZS5jb21wb25lbnRJbnN0YW5jZTtcbiAgICBmaXh0dXJlLmRldGVjdENoYW5nZXMoKTtcbiAgfSk7XG5cbiAgaXQoJ3Nob3VsZCBjcmVhdGUnLCAoKSA9PiB7XG4gICAgZXhwZWN0KGNvbXBvbmVudCkudG9CZVRydXRoeSgpO1xuICB9KTtcbn0pO1xuIl0sInZlcnNpb24iOjN9