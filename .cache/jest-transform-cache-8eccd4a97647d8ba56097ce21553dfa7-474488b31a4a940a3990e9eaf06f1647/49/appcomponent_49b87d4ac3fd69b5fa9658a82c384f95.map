{"version":3,"names":["cov_w5f0kn1a7","actualCoverage","s","core_1","require","auth_1","rxjs_1","firestore_1","user_interface_1","AppComponent","constructor","firestore","auth","localStorageService","f","authState$","authState","ngOnInit","authStateSubscription","pipe","switchMap","aUser","b","save","StorageKeys","User","uid","combineLatest","from","getDoc","doc","Collections","Users","of","userDb","exists","updateDoc","isLoggedIn","setDoc","email","displayName","photoURL","emailVerified","userUid","get","tap","clear","EMPTY","subscribe","ngOnDestroy","unsubscribe","tslib_1","__decorate","Component","selector","template","__param","Optional","exports"],"sources":["C:\\Users\\User\\Desktop\\k6c6KIx4wbYIMnoNorW7\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit, Optional } from '@angular/core';\nimport { Auth, authState, User } from '@angular/fire/auth';\nimport {\n  combineLatest,\n  EMPTY,\n  from,\n  of,\n  Subscription,\n  switchMap,\n  tap,\n} from 'rxjs';\nimport {\n  Firestore,\n  getDoc,\n  setDoc,\n  updateDoc,\n  doc,\n} from '@angular/fire/firestore';\nimport { Collections, StorageKeys } from '@app/interfaces/user.interface';\nimport { LocalStorageService } from '@app/services/local-storage.service';\n\n@Component({\n  selector: 'app-root',\n  template: '<router-outlet></router-outlet>',\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  authStateSubscription: Subscription;\n  authState$ = authState(this.auth);\n\n  constructor(\n    @Optional() private firestore: Firestore,\n    @Optional() private auth: Auth,\n    private localStorageService: LocalStorageService\n  ) {}\n\n  ngOnInit() {\n    this.authStateSubscription = this.authState$\n      .pipe(\n        switchMap((aUser: User | null) => {\n          if (aUser) {\n            this.localStorageService.save(StorageKeys.User, aUser.uid);\n            return combineLatest([\n              from(getDoc(doc(this.firestore, Collections.Users, aUser.uid))),\n              of(aUser),\n            ]).pipe(\n              switchMap(([userDb, aUser]) => {\n                if (userDb.exists()) {\n                  return updateDoc(\n                    doc(this.firestore, Collections.Users, aUser.uid),\n                    {\n                      isLoggedIn: true,\n                    }\n                  );\n                } else {\n                  return from(\n                    setDoc(doc(this.firestore, Collections.Users, aUser.uid), {\n                      email: aUser.email,\n                      displayName: aUser.displayName,\n                      photoURL: aUser.photoURL,\n                      emailVerified: aUser.email,\n                      isLoggedIn: true,\n                    })\n                  );\n                }\n              })\n            );\n          } else {\n            const userUid = this.localStorageService.get(StorageKeys.User);\n            if (userUid) {\n              return from(\n                updateDoc(doc(this.firestore, Collections.Users, userUid), {\n                  isLoggedIn: false,\n                })\n              ).pipe(tap(() => this.localStorageService.clear()));\n            } else {\n              return EMPTY;\n            }\n          }\n        })\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.authStateSubscription.unsubscribe();\n  }\n}\n"],"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"}