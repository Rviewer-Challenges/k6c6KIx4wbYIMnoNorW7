{"version":3,"names":["cov_13yxhr3yza","actualCoverage","s","core_1","require","CryptoJS","tslib_1","__importStar","environment_1","LocalStorageService","constructor","f","key","environment","applicationSecret","save","value","localStorage","setItem","encrypt","get","data","b","getItem","decrypt","remove","removeItem","clear","txt","AES","toString","txtToDecrypt","enc","Utf8","__decorate","Injectable","providedIn","exports"],"sources":["C:\\Users\\User\\Desktop\\k6c6KIx4wbYIMnoNorW7\\src\\app\\services\\local-storage.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport * as CryptoJS from 'crypto-js';\nimport { environment } from '@env/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorageService {\n  private readonly key: string;\n\n  constructor() {\n    this.key = environment.applicationSecret;\n  }\n\n  public save(key: string, value: string) {\n    localStorage.setItem(key, this.encrypt(value));\n  }\n\n  public get(key: string) {\n    const data = localStorage.getItem(key) || '';\n    return this.decrypt(data);\n  }\n\n  public remove(key: string) {\n    localStorage.removeItem(key);\n  }\n\n  public clear() {\n    localStorage.clear();\n  }\n\n  private encrypt(txt: string): string {\n    return CryptoJS.AES.encrypt(txt, this.key).toString();\n  }\n\n  private decrypt(txtToDecrypt: string) {\n    return CryptoJS.AES.decrypt(txtToDecrypt, this.key).toString(\n      CryptoJS.enc.Utf8\n    );\n  }\n}\n"],"mappings":"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"}